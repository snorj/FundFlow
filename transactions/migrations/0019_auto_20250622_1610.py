# Generated by Django 5.1.7 on 2025-06-22 16:10

from django.db import migrations, models


def populate_vendor_names(apps, schema_editor):
    """
    Populate the new vendor name fields for existing transactions.
    """
    Transaction = apps.get_model('transactions', 'Transaction')
    
    # Process transactions in batches to handle large datasets
    batch_size = 1000
    
    for transaction in Transaction.objects.iterator(chunk_size=batch_size):
        # Set original_vendor_name and vendor_name from counterparty or description
        original_vendor_name = ''
        
        # Extract vendor name from counterparty_identifier if available
        if transaction.counterparty_identifier:
            original_vendor_name = transaction.counterparty_identifier.strip()
        # Otherwise try to extract from description
        elif transaction.description:
            # Simple extraction - take first part of description
            parts = transaction.description.split(' - ')
            if len(parts) > 1:
                original_vendor_name = parts[0].strip()
            else:
                # Take first 50 characters as a fallback
                original_vendor_name = transaction.description[:50].strip()
        
        # If we still don't have a vendor name, use a default
        if not original_vendor_name:
            original_vendor_name = 'Unknown Vendor'
        
        # For now, set vendor_name same as original_vendor_name
        # Vendor mapping will be applied later during upload processing
        transaction.original_vendor_name = original_vendor_name
        transaction.vendor_name = original_vendor_name
        transaction.auto_categorized = False  # Existing transactions weren't auto-categorized
        
        transaction.save(update_fields=['original_vendor_name', 'vendor_name', 'auto_categorized'])


def reverse_populate_vendor_names(apps, schema_editor):
    """
    Reverse migration - clear the vendor name fields.
    """
    # No need to do anything on reverse since we're removing the fields
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('transactions', '0018_vendormapping_alter_vendorrule_options_and_more'),
    ]

    operations = [
        # Add the new fields as nullable first
        migrations.AddField(
            model_name='transaction',
            name='original_vendor_name',
            field=models.CharField(
                max_length=255,
                null=True,
                blank=True,
                help_text="The original vendor name as it appeared in the source data (CSV, bank API, etc.)"
            ),
        ),
        migrations.AddField(
            model_name='transaction',
            name='vendor_name',
            field=models.CharField(
                max_length=255,
                null=True,
                blank=True,
                help_text="The vendor name after applying any user mappings (used for categorization rules)"
            ),
        ),
        migrations.AddField(
            model_name='transaction',
            name='auto_categorized',
            field=models.BooleanField(
                default=False,
                db_index=True,
                help_text="Whether this transaction was automatically categorized by vendor rules"
            ),
        ),
        
        # Populate the fields with data
        migrations.RunPython(
            populate_vendor_names,
            reverse_populate_vendor_names
        ),
        
        # Make the fields non-nullable
        migrations.AlterField(
            model_name='transaction',
            name='original_vendor_name',
            field=models.CharField(
                max_length=255,
                help_text="The original vendor name as it appeared in the source data (CSV, bank API, etc.)"
            ),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='vendor_name',
            field=models.CharField(
                max_length=255,
                help_text="The vendor name after applying any user mappings (used for categorization rules)"
            ),
        ),
        
        # Add the new indexes
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'vendor_name'], name='transactions_user_vendor_name_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'original_vendor_name'], name='transactions_user_original_vendor_name_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['auto_categorized'], name='transactions_auto_categorized_idx'),
        ),
    ]
